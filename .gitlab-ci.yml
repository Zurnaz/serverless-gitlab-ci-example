image: registry.gitlab.com/zurnaz/serverless-gitlab-ci-example

stages:
  - build
  - test
  - deploy
  - e2e tests
  - cleanup
  - release

variables:
  DEV: dev
  STAGING: "staging"
  LIVE: "live"
  TABLE_NAME: "cicdtable" # prefix one of the above 3 stages
  CYPRESS_CACHE_FOLDER: ${CI_PROJECT_DIR}/cache/Cypress
  LOCAL_PLUGIN: "true" #  temp until iopipe dep fixed

cache:
  key: ${CI_COMMIT_REF_NAME}
  paths:
    - node_modules/
    - cache/Cypress

install:
  stage: build
  image: cypress/base:10.15.3
  script:
    - yarn install --frozen-lockfile --production

lint:
  stage: test
  image: cypress/base:10.15.3
  script:
    - yarn install --frozen-lockfile
    - yarn lint

unit tests:
  stage: test
  image: cypress/base:10.15.3
  script:
    - yarn install --frozen-lockfile
    - yarn ci
  # https://gitlab.com/snippets/1689389
  coverage: /^All files\s+\|\s+\d+\.*\d*\s+\|\s*(\d+\.*\d*)/

scan dependencies:
  stage: test
  image: node:slim
  script:
    - npm install -g retire
    - cd ${CI_PROJECT_DIR}
    - yarn install --frozen-lockfile --production
    - retire --path ${CI_PROJECT_DIR} --ignore ${CI_PROJECT_DIR}/cache

SAST:
  stage: test
  image: python:3.7-stretch
  script:
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install nodejsscan
    - nodejsscan -d ${CI_PROJECT_DIR}/src -o ${CI_PROJECT_DIR}/nodejsscan-results.json
  artifacts:
    untracked: false
    paths:
      - nodejsscan-results.json
    expire_in: 4 days

dev:
  stage: deploy
  variables:
    DYNAMODB_TABLE_NAME: $TABLE_NAME-$DEV-$CI_COMMIT_REF_NAME
  script:
    - sls deploy -s ${DEV}-${CI_COMMIT_REF_NAME}  -v
  only:
    - branches
  except:
    - master
  environment:
    name: dev/$CI_COMMIT_REF_NAME
    on_stop: stop_dev
  artifacts:
    untracked: false
    paths:
      - stack.json
    expire_in: 4 days

e2e tests dev:
  image: cypress/base:10.15.3
  stage: e2e tests
  script:
    - yarn install --frozen-lockfile
    - yarn verify
    - yarn e2e
  only:
    - branches
  except:
    - master
  dependencies:
    - dev

staging:
  stage: deploy
  variables:
    DYNAMODB_TABLE_NAME: $TABLE_NAME-$STAGING
  script:
    - sls deploy -s ${STAGING}  -v
  environment:
    name: staging
    on_stop: stop_staging
  only:
    - master
  artifacts:
    untracked: false
    paths:
      - stack.json

e2e tests staging:
  image: cypress/base:10.15.3
  stage: e2e tests
  script:
    - yarn install --frozen-lockfile
    - yarn e2e
  only:
    - master
  dependencies:
    - staging

deploy live:
  stage: release
  variables:
    DYNAMODB_TABLE_NAME: $TABLE_NAME-$LIVE
  script:
    - sls deploy -s ${LIVE} -v
  environment:
    name: live
  only:
    - master
  when: manual

stop_dev:
  stage: cleanup
  variables:
    DYNAMODB_TABLE_NAME: $TABLE_NAME-$DEV-$CI_COMMIT_REF_NAME
  script:
    - sls remove -s ${DEV}-${CI_COMMIT_REF_NAME} -v
  only:
    - branches
  except:
    - master
  environment:
    name: dev/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  allow_failure: false

stop_staging:
  stage: deploy
  variables:
    DYNAMODB_TABLE_NAME: $TABLE_NAME-$STAGING
  script:
    - sls remove -s ${STAGING} -v
  only:
    - master
  environment:
    name: staging
    action: stop
  when: manual
